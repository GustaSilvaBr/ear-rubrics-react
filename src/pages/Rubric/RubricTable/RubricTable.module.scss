// src/pages/Rubric/RubricTable/RubricTable.module.scss
@import "../../../styles/variables";

// --- NEW STYLES START HERE ---

// 1. This new container will handle the scrolling
.tableContainer {
  // Set a height for the scrollable area. This is calculated to show about 4 rows.

  max-height: 420px;
  // This is the key property that creates the vertical scrollbar if content overflows.
  overflow-y: scroll;
  // This is required for sticky positioning to work inside this element.
  position: relative;
  // Move container styles from the table to this wrapper
  box-shadow: $box-shadow;
  border-radius: $border-radius;
  border: 1px solid $border-color;
  margin-top: $spacing-md;
}

// 2. Add sticky properties to the existing header definition
%header-base {
  background-color: #fff;
  border-bottom: 2px solid $text-color;
  padding: $spacing-sm;
  text-align: left;
  font-size: $font-size-base;
  font-weight: $font-weight-bold;
  color: $text-color;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  // These three lines make the header stick to the top of the .tableContainer
  position: sticky;
  top: 0;
  z-index: 1;
}

// 3. Add sticky properties to the footer row
.addCategoryRow {
  padding: 0;
  // These three lines make the footer stick to the bottom of the .tableContainer
  position: sticky;
  bottom: 0;
  z-index: 1;
}

// 4. Ensure the add button has a background to hide text scrolling underneath it
.addButton {
  width: 100%;
  padding: $spacing-sm; // Use consistent padding
  font-size: $font-size-large;
  font-weight: $font-weight-bold;
  color: #fff;
  background-color: $primary-color;
  border: none;
  // A top border helps separate the button from the scrolled content
  border-top: 1px solid darken($primary-color, 5%);
  cursor: pointer;
  transition: background-color 0.3s ease;
  text-align: center;

  &:hover {
    background-color: darken($primary-color, 10%);
  }
}

table.rubricTable {
  border-collapse: collapse;
  table-layout: fixed;
  // Remove margin-top and box-shadow as they are on the container now
}

.categoryHeader {
  @extend %header-base;
  width: 130px;
}

.scoreHeader {
  @extend %header-base;
  width: 300px;
}

.actionHeader {
  @extend %header-base;
  width: 10px;
}

td.tableCell {
  border: 1px solid $border-color;
  padding: 0;
  vertical-align: top;
  height: 90px;

  // --- NEW: Add cursor pointer for grading ---
  &.gradingMode {
    &:hover {
      background-color: lighten($success-color, 60%);
    }

    textarea {
      cursor: pointer;
    }
  }

  &.editingMode {
    cursor: text;
  }

  // Add a selected state
  &.selected {
    background-color: lighten($success-color, 60%);

    textarea {
      background-color: transparent; // Ensure textarea doesn't hide the background
    }
  }

  // Novo estilo para células desabilitadas
  &.disabledForGrading {
    background-color: lighten($background-color, 3%); // Um fundo ligeiramente mais escuro
    cursor: not-allowed; // Indicar que não é clicável

    textarea {
      cursor: not-allowed;
      background-color: transparent; // Garantir que a textarea não esconda o fundo
      opacity: 0.7; // Deixar o texto ligeiramente desbotado
    }

    &:hover {
      background-color: lighten($background-color, 3%); // Prevenir efeito hover
    }
  }
}


.categoryCell {
  @extend .tableCell;
}

.categoryCell textarea {
  font-weight: $font-weight-bold;
}

.actionCell {
  @extend .tableCell;
  text-align: center;
}

textarea.cellInput {
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  padding: $spacing-xs $spacing-sm;
  border: none;
  background-color: transparent;
  font-family: $font-family-sans;
  font-size: $font-size-base;
  color: $text-color;
  resize: none;

  &:focus {
    outline: 2px solid $primary-color;
    background-color: lighten($secondary-color, 2%);
  }
}

.deleteButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  min-height: 70px;
  border: none;
  background: transparent;
  color: $error-color;
  font-size: $font-size-xl;
  font-weight: $font-weight-bold;
  cursor: pointer;
  transition: background-color 0.2s ease;

  &:hover {
    background-color: lighten($error-color, 40%);
  }
}